<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Volver al listado" xml:space="preserve">
    <value>Back to list</value>
  </data>
  <data name="¿Desea personalizar el producto?" xml:space="preserve">
    <value>Do you want to customize the product?</value>
  </data>
  <data name="Reseña del producto" xml:space="preserve">
    <value>Product review</value>
  </data>
  <data name="Calificación" xml:space="preserve">
    <value>Rating</value>
  </data>
  <data name="Comentario" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Debe ingresar una cantidad válida entre 1 y 100" xml:space="preserve">
    <value>You must enter a valid amount between 1 and 100</value>
  </data>
  <data name="Debe insertar al menos una imagen" xml:space="preserve">
    <value>You must insert at least one image</value>
  </data>
  <data name="Presione &quot;ESC&quot; en el teclado o haga clic en la X para cerrar esta ventana" xml:space="preserve">
    <value>Press "ESC" on the keyboard or click on the x to close this window</value>
  </data>
  <data name="¡Producto agregado al carrito!" xml:space="preserve">
    <value>Product added to cart successfully!</value>
  </data>
  <data name="Reseña agregada exitosamente" xml:space="preserve">
    <value>Review added successfully</value>
  </data>
  <data name="Agregar al carrito" xml:space="preserve">
    <value>Add to cart</value>
  </data>
  <data name="Vista previa" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="Arrastre la imagen aquí o haga clic para seleccionarla" xml:space="preserve">
    <value>Drag the image here or click to select it</value>
  </data>
  <data name="Foto del empaque (₡ 3 000.00)" xml:space="preserve">
    <value>Packaging photo (₡ 3 000.00)</value>
  </data>
  <data name="Mensaje personalizado del empaque (₡ 2 000.00)" xml:space="preserve">
    <value>Personalized packaging message (₡ 2 000.00)</value>
  </data>
  <data name="Seleccione un tipo" xml:space="preserve">
    <value>Select a type</value>
  </data>
  <data name="Solo se permiten imágenes" xml:space="preserve">
    <value>Only images are allowed</value>
  </data>
  <data name="Tipo de empaque" xml:space="preserve">
    <value>Type of packaging</value>
  </data>
  <data name="Sí" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Precio base" xml:space="preserve">
    <value>Base price</value>
  </data>
  <data name="Precio anterior" xml:space="preserve">
    <value>Previous price</value>
  </data>
  <data name="Precio en oferta" xml:space="preserve">
    <value>Offer price</value>
  </data>
  <data name="Cargando promedio..." xml:space="preserve">
    <value>Loading average rating...</value>
  </data>
  <data name="Cancelar" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Enviar reseña" xml:space="preserve">
    <value>Send review</value>
  </data>
  <data name="Error al enviar reseña" xml:space="preserve">
    <value>Error submitting review</value>
  </data>
  <data name="Error inesperado" xml:space="preserve">
    <value>Unexpected error</value>
  </data>
  <data name="¡Error al insertar producto al carrito!" xml:space="preserve">
    <value>Error inserting product into cart!</value>
  </data>
  <data name="OFERTA" xml:space="preserve">
    <value>DISCOUNT</value>
  </data>
  <data name="Personalización del producto" xml:space="preserve">
    <value>Product customization</value>
  </data>
  <data name="DISPONIBLE" xml:space="preserve">
    <value>AVAILABLE</value>
  </data>
  <data name="El mensaje personalizado es requerido" xml:space="preserve">
    <value>Personalized message is required</value>
  </data>
  <data name="El mensaje no puede superar los 500 caracteres" xml:space="preserve">
    <value>The message cannot exceed 500 characters.</value>
  </data>
  <data name="El tipo de empaque es requerido" xml:space="preserve">
    <value>The type of packaging is required</value>
  </data>
  <data name="AGOTADO" xml:space="preserve">
    <value>OUT OF STOCK</value>
  </data>
  <data name="DETALLE DEL PRODUCTO" xml:space="preserve">
    <value>PRODUCT DETAIL</value>
  </data>
  <data name="Cantidad" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="Fecha de la reseña" xml:space="preserve">
    <value>Review date</value>
  </data>
  <data name="Dejar reseña" xml:space="preserve">
    <value>Leave review</value>
  </data>
  <data name="Subtotal" xml:space="preserve">
    <value>Subtotal</value>
  </data>
  <data name="Cargando reseñas..." xml:space="preserve">
    <value>Loading reviews...</value>
  </data>
  <data name="Usuario" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="Validación fallida" xml:space="preserve">
    <value>Validation failed</value>
  </data>
</root>