@model IEnumerable<DoreanSportic.Application.DTOs.PedidoDetalleDTO>
@using System.Globalization
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    var culturaPersonalizada = (CultureInfo)CultureInfo.InvariantCulture.Clone();
    culturaPersonalizada.NumberFormat.NumberGroupSeparator = " ";
    culturaPersonalizada.NumberFormat.NumberDecimalSeparator = ".";

    // Precio fijos de personalización

    const decimal PRECIO_FIJO_MENSAJE_PERSONALIZADO = 2000m; // Precio fijo por personalización
    const decimal PRECIO_FIJO_FOTO = 3000m;
    // Obtener el ID del pedido desde ViewData
    var pedidoId = (int)(ViewData["PedidoId"] ?? 0);

    // Para verificar si hay productos en el modelo del todo
    var hayItemes =
        (Model != null && Model.Any()) || (Model != null && Model.Any(x => x.IdEmpaque != null && x.Foto != null));

    // Verificar si hay productos personalizados
    var personalizados = Model.Where(x => x.IdEmpaque != null && x.Foto != null).ToList();

    decimal subtotalPersonalizaciones = 0m;

    // IVA
    const decimal IVA = 0.13m;
}

@if (!hayItemes)
{
    // Verificar si no hay productos. En caso de no haber productos, mostrar el mensaje respectivo y colocar el botón para agregar productos

    <div id="detalles-root" data-pedido-id="@pedidoId" class="p-4 border rounded bg-base-100 text-center">
        <p class="text-slate-500 mb-4"><b>@Localizer["No hay productos en el carrito"]</b></p>
        <a asp-controller="Producto" asp-action="Index" class="btn btn-primary">
            @Localizer["Agregar productos"]
        </a>
    </div>
    @* No renderizar la tabla ni totales si no hay items *@
    return;
}

<div id="detalles-root" data-pedido-id="@pedidoId" class="overflow-x-auto rounded-box border border-base-content/5 bg-base-100">
    <table class="table">
        <thead class="bg-primary text-white">
            <tr>
                <th class="text-left">@Localizer["Producto"]</th>
                <th class="text-center">@Localizer["Cantidad"]</th>
                <th class="text-end">@Localizer["Precio"]</th>
                <th class="text-end">@Localizer["Subtotal"]</th>
                <th class="text-end">@Localizer["IVA (13%)"]</th>
                <th class="text-center">@Localizer["Total"]</th>
                <th class="text-end"></th>
            </tr>
        </thead>
        <tbody id="pedido-detalles-body">
            @foreach (var item in Model)
            {
                var producto = item.IdProductoNavigation;
                // precio estimado mostrado (tu subtotal / cantidad cuando carga por primera vez)
                var precioUnitEstimado = item.Cantidad > 0 ? (item.SubTotal / item.Cantidad) : 0m;

                // Cálculo por fila
                var impFila = Math.Round(item.SubTotal * IVA, 2, MidpointRounding.AwayFromZero);
                var totFila = item.SubTotal + impFila;

                <tr data-detalle-id="@item.Id">
                    <td>
                        <div class="font-semibold text-sm">@producto?.Nombre</div>
                    </td>
                    <td class="text-center w-25">
                        <input class="input input-bordered w-full qty-input"
                               type="number" min="0" step="1" value="@item.Cantidad" max="@producto.Stock"
                               inputmode="numeric" pattern="\d*" />
                        <span class="qty-error text-red-600 text-xs"></span>
                    </td>
                    <td class="text-end cell-punit">₡@precioUnitEstimado.ToString("N2", culturaPersonalizada)</td>
                    <td class="text-end cell-subtotal">₡@item.SubTotal.ToString("N2", culturaPersonalizada)</td>

                    <td class="text-end cell-tax">₡@impFila.ToString("N2", culturaPersonalizada)</td>
                    <td class="text-end cell-total">₡@totFila.ToString("N2", culturaPersonalizada)</td>

                    <td class="text-end">
                        <div>
                            <button class="btn-eliminar-detalle btn btn-xs text-white bg-[#FF4D4D]">
                                @Localizer["Eliminar"]
                            </button>
                        </div>
                    </td>

                </tr>
            }
            @{
                // totales iniciales (servidos por el server si los calculaste antes)
                var subIni = Model.Sum(x => x.SubTotal);
                var impIni = Math.Round(subIni * 0.13m, 2, MidpointRounding.AwayFromZero);
                var totIni = subIni + impIni;
            }
            
        </tbody>
    </table>
</div>

<!-- Si hay productos personalizados, mostrar el subtotal de personalizaciones -->
@if (personalizados.Any())
{
    <br />
    <h2 class="p-2 font-bold text-slate-700">@(Localizer["Detalle de productos personalizados"])</h2>

    <div class="overflow-x-auto rounded-box border border-base-content/5 bg-base-100">
        <table class="table">
            <thead class="bg-primary text-white">
                <tr>
                    <th class="text-left">@(Localizer["Producto"])</th>
                    <th class="text-center">@(Localizer["Mensaje"])</th>
                    <th class="text-center">@(Localizer["Imagen personalizada"])</th>
                    <th class="text-center">@(Localizer["Criterios de personalización"])</th>
                    <th class="text-end">@(Localizer["Subtotal paquetes (ya incluido)"])</th>
                </tr>
            </thead>
            <tbody id="tbody-personal">
                @foreach (var item in personalizados)
                {
                    var empaquePrecio = item.IdEmpaqueNavigation?.PrecioBase ?? 0m;

                    bool usaMensaje = !string.IsNullOrWhiteSpace(item.MensajePersonalizado);
                    bool usaFoto = (item.Foto?.Length ?? 0) > 0;


                    var costoUnitarioPersonalizacion = empaquePrecio
                    + (usaMensaje ? PRECIO_FIJO_MENSAJE_PERSONALIZADO : 0m)
                    + (usaFoto ? PRECIO_FIJO_FOTO : 0m);

                    var subtotalFila = costoUnitarioPersonalizacion * item.Cantidad;
                    subtotalPersonalizaciones += subtotalFila;

                    <tr data-detalle-id="@item.Id" class="row-personal">
                        <td class="text-left">
                            @item.IdProductoNavigation?.Nombre
                            <div class="text-xs text-slate-500">
                            </div>
                        </td>

                        @* Mostrar solo los primeros 15 caracteres del mensaje personalizado si sobrepasa 15 caracteres*@
                        <td class="text-left">
                            @(
                                !string.IsNullOrEmpty(item.MensajePersonalizado)
                                ? (item.MensajePersonalizado.Length > 15
                                ? item.MensajePersonalizado.Substring(0, 15) + "..."
                                : item.MensajePersonalizado)
                                : ""
                            )
                    </td>

                        <td class="text-center">
                            @if (usaFoto)
                            {
                                <img src="data:image/jpeg;base64,@Convert.ToBase64String(item.Foto!)"
                                     alt="Foto personalizada"
                                     style="width:100%;height:70px;object-fit:cover;border-radius:8px;" />
                            }
                            else
                            {
                                <span class="text-slate-400">@(Localizer["Sin foto"])</span>
                            }
                        </td>

                        <td class="text-center">
                            <div class="flex flex-col gap-1">
                                <p style="font-size: 10px">
                                    <b>@Localizer["Empaque"]:</b>
                                    @item.IdEmpaqueNavigation?.TipoEmpaque
                                    <span class="ml-2">₡@empaquePrecio.ToString("N2", culturaPersonalizada)</span>
                                </p>
                                <p style="font-size: 10px">
                                    <b>@Localizer["Mensaje personalizado"]:</b>
                                    <span class="ml-2">₡@PRECIO_FIJO_MENSAJE_PERSONALIZADO.ToString("N2", culturaPersonalizada)</span>
                                </p>
                                <p style="font-size: 10px">
                                    <b>@Localizer["Foto"]:</b>
                                    <span class="ml-2">₡@PRECIO_FIJO_FOTO.ToString("N2", culturaPersonalizada)</span>
                                </p>
                            </div>
                        </td>

                        <!-- Guardar el costo unitario en data-unit-pers -->
                        <td class="text-end cell-pers-subtotal"
                            data-unit-pers="@costoUnitarioPersonalizacion">
                            ₡@subtotalFila.ToString("N2", culturaPersonalizada)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}


@* Bloque de totales: SIEMPRE visible *@
<table class="table mt-2">
    <tbody>
        <tr>
            <td colspan="5" class="text-end fw-bold">
                <b>@Localizer["Subtotal (productos + personalizados)"]:</b>
                <span id="totals-sub">₡@subIni.ToString("N2", culturaPersonalizada)</span>
            </td>
        </tr>
        <tr>
            <td colspan="5" class="text-end">
                <b>@(Localizer["Impuesto (IVA 13%)"]): </b>
                <span id="totals-tax">₡@impIni.ToString("N2", culturaPersonalizada)</span>
            </td>
        </tr>
        <tr class="bg-primary text-white text-lg">
            <td colspan="5" class="text-end fw-bold">
                <b>@(Localizer["Total a pagar"]): </b>
                <span id="totals-grand">₡@totIni.ToString("N2", culturaPersonalizada)</span>
            </td>
        </tr>
    </tbody>
</table>

<!-- Botón para completar compra -->
<div class="mt-4 flex p-2 gap-2">
    <span id="save-status" class="text-sm mr-2"></span>
    <button id="btn-completar-compra" class="btn btn-success text-white">
        <b>@Localizer["Pagar"]</b>
    </button>
</div>

