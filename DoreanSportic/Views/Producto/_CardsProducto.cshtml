@model IEnumerable<DoreanSportic.Application.DTOs.ProductoDTO>  
@using DoreanSportic.Infrastructure.Models
@using System.Globalization

<!-- Para el separador de miles-->
@{
    var culturaPersonalizada = (CultureInfo)CultureInfo.InvariantCulture.Clone();
    culturaPersonalizada.NumberFormat.NumberGroupSeparator = " "; // separador de miles
    culturaPersonalizada.NumberFormat.NumberDecimalSeparator = "."; // separador decimal
}

@foreach (var item in Model)  
{
    <div class="mb-4 mr-2 card bg-base-100 w-75 h-100 shadow-lg">
        <figure class="px-10 pt-5  flex justify-center items-center ">  
            <img style="width:150px; height: 150px"  
                 src="data:image/jpeg;charset=utf-8;base64,@Convert.ToBase64String(item.PrimeraImagen ?? new byte[0])"  
                 alt="Ropa/accesorios deportivos"  
                 class=" h-full object-contain rounded-xl" />  
        </figure>  
        <div class="card-body flex flex-col justify-between h-100">  
            <!-- Título + Badge -->  
            <h2 class="card-title">  
                @Html.DisplayFor(m => item.Nombre)  
            </h2>  

            <div class="flex flex-col gap gap-1 mb-3">
                <div class="flex flex-row gap gap-1">                
                    <div class="badge bg-[#000000] text-white">@item.IdMarcaNavigation?.Nombre.ToUpper()</div>  

                   <!-- Para mostrar disponibilidad del producto dependiendo de la cantidad en stock-->
                   @{
                        if (item.Stock == 0)
                        {
                            <div class="badge bg-[#FF0000] text-white">AGOTADO</div>
                        }
                        else
                        {
                            <div class="badge bg-[#50C878] text-white">DISPONIBLE</div>
                        }
                    }
                    <!-- Código Razor para mostrar el badge de "EN OFERTA" en caso de que  
                        exista una promoción  
                    --> 

                    @{
                        if ((item.IdPromocion?.Any(p => p.FechaInicio <= DateTime.Today && p.FechaFin >= DateTime.Today) ?? false) ||  
                        (item.IdCategoriaNavigation?.IdPromocion?.Any(p => p.FechaInicio <= DateTime.Today && p.FechaFin >= DateTime.Today) ?? false))  
                        {  
                            <div class="badge badge-secondary">OFERTA</div>
                        }
                    }
                </div> 
                <!-- Para mostrar las etiquetas del producto (Envio, Original, Garantia, etc.)-->
                <div class="flex flex-wrap gap-1 mt-2">
                        @if (item.IdEtiqueta != null && item.IdEtiqueta.Count > 0)
                        {
                            foreach (var etiqueta in item.IdEtiqueta)
                            {
                                <div class="badge badge-soft badge-secondary">@etiqueta.Nombre.ToUpper()</div>
                            }
                        }
                </div>

            </div>   

            @{  
                decimal precioBase = item.PrecioBase;  
                DateTime hoy = DateTime.Today;  

                // Obtener promociones activas por producto  
                var promocionesProductoActivas = item.IdPromocion  
                .Where(p => p.FechaInicio <= hoy && p.FechaFin >= hoy);  

                decimal descuentoProducto = promocionesProductoActivas.Sum(p => p.PorcentajeDescuento ?? 0);  

                // Obtener promociones activas por categoría (si existen)  
                IEnumerable<Promocion> promocionesCategoriaActivas = Enumerable.Empty<Promocion>();  

                if (item.IdCategoriaNavigation?.IdPromocion != null)  
                {  
                    promocionesCategoriaActivas = item.IdCategoriaNavigation.IdPromocion  
                    .Where(p => p.FechaInicio <= hoy && p.FechaFin >= hoy);  
                }  

                decimal descuentoCategoria = promocionesCategoriaActivas.Sum(p => p.PorcentajeDescuento ?? 0);  

                // Sumar ambos descuentos  
                decimal descuentoTotal = descuentoProducto + descuentoCategoria;  

                // Límite opcional a 100%  
                if (descuentoTotal > 100) descuentoTotal = 100;  
                var precioConDescuento = precioBase - (precioBase * descuentoTotal / 100);  
            }  

            @if (descuentoTotal > 0)  
            {  
                <div class="flex flex-col gap gap-1 mb-2">  
                    <div class="flex flex-row gap gap-1 text-xs text-gray-400">
                        <b>Precio anterior: </b><span class="line-through">₡@precioBase.ToString("N2", culturaPersonalizada)</span>
                        <div class="badge bg-[#FF0000] badge-xl text-white font-bold">
                            - @descuentoTotal.ToString("0")%
                        </div>  
                    </div>  
                    <div class="flex flex-row gap gap-1">  
                        <b>Precio en oferta: </b>  
                        <div class="badge badge-xl bg-success text-black font-bold">
                            ₡@precioConDescuento.ToString("N2", culturaPersonalizada)
                        </div>  
                    </div>  
                </div>  
            }  
            else  
            {  
                <div class="flex flex-row gap gap-1">  
                    <b class="mt-1">Precio base: </b>  
                    <div class="badge badge-outline w-fit">
                        <b>₡@precioBase.ToString("N2", culturaPersonalizada)</b> + I.V.A
                    </div>  
                </div>
                <div class="flex flex-row gap gap-1">
                </div>
            }

            <!-- Botones alineados abajo con justify-between -->  
            <div class="flex justify-between gap-2">  
                
                <!-- Redirección a la vista de detalles -->
                <a class="btn btn-soft btn-primary text-white"  
                   asp-action="Details" asp-route-id="@item.Id">Ver detalles</a>

                <!-- Botón para agregar al carrito -->
                @{
                    if (item.Stock == 0)
                    {
                        <button class="btn btn-soft text-white cursor-not-allowed" style="background-color: #808080" disabled>
                            Agregar al carrito
                        </button>
                    }
                    else
                    {
                        <button class="btn btn-soft bg-[#006400] text-white">Agregar al carrito</button>
                    }
                }
            </div>
        </div>  
    </div>  
}
