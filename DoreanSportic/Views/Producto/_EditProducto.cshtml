@using System.Text.Json
@using System.Text

@model DoreanSportic.Application.DTOs.ProductoDTO

@* Para cargar las imágenes desde la base de datos  *@
@{
    var imagenesJson = System.Text.Json.JsonSerializer.Serialize(
        Model.ImagenesProducto.Select(img => new {
            base64 = Convert.ToBase64String(img.Imagen),
            nombre = img.Descripcion ?? "imagen.jpg"
        })
    );

    // Convertir las imágenes a base 64 a partir del JSON
    var imagenesJsonBase64 = Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(imagenesJson));
}

<form asp-action="Edit" asp-antiforgery="true" method="post" enctype="multipart/form-data"
      x-data="dataFileDnD()"
      x-init="initialImages = JSON.parse(atob('@imagenesJsonBase64'));init();"
      data-modo="editar"
      x-on:submit.prevent="submitForm($event)"
      class="space-y-4 p-2 bg-base-100 rounded-xl shadow-lg">

    <div class="flex flex-col gap gap-2 mb-3">
        <a href="javascript:void(0);"
           class="btn btn-sm btn-outline bg-[#006400] text-white w-50"
           onclick="cargarVista('/Producto/IndexAdmin')">
            Volver al listado
        </a>
        <h2 class="text-left font-bold mb-3">EDITAR PRODUCTO</h2>
    </div>

    <input type="hidden" asp-for="Id" />

    <div class="flex flex-row gap-4 w-full">
        <div asp-validation-summary="ModelOnly" class="text-sm italic" style="color:red; font-size: small"></div>

        <!-- Columna izquierda -->
        <div class="w-2/3 flex flex-col gap-4">
            <div class="form-control w-75">
                <label asp-for="Nombre" class="label font-bold text-black">Nombre del producto</label>
                <input asp-for="Nombre" class="input input-bordered w-full" style="border-color:black" />
                <span asp-validation-for="Nombre" class="text-sm italic" style="color:red; font-size: small"> </span>
            </div>

            <div class="form-control w-75">
                <label asp-for="Descripcion" class="label font-bold text-black">Descripción</label>
                <textarea asp-for="Descripcion" class="textarea textarea-bordered w-full" style="border-color:black"></textarea>
                <span asp-validation-for="Descripcion" class="text-sm italic" style="color:red; font-size: small"> </span>
            </div>

            <div class="flex justify-between gap-2">
                <div class="form-control w-25">
                    <label asp-for="PrecioBase" class="label font-bold text-black">Precio base (₡)</label>
                    <input asp-for="PrecioBase" id="inputPrecioBase" type="number" step="0.01" class="input input-bordered w-full" style="border-color:black" />
                    @* oninput="this.value = this.value.match(/^\d*\.?\d{0,2}/)?.[0] || ''" *@
                    <span asp-validation-for="PrecioBase" class="text-sm italic" style="color:red; font-size: small"> </span>
                </div>

                <div class="form-control w-25">
                    <label asp-for="Stock" class="label font-bold text-black">Cantidad</label>
                    <input asp-for="Stock" id="inputCantidad" type="number" class="input input-bordered w-full" style="border-color:black" />
                    <span asp-validation-for="Stock" class="text-sm italic" style="color:red; font-size: small"> </span>
                </div>
            </div>

            <div class="form-control w-75">
                <label asp-for="IdCategoria" class="label font-bold text-black">Categoría</label>
                <select asp-for="IdCategoria" asp-items="ViewBag.ListCategorias" class="select select-bordered w-full" style="border-color:black">
                    <option value="">Seleccione una categoría</option>
                </select>
                <span asp-validation-for="IdCategoria" class="text-sm italic" style="color:red; font-size: small"> </span>
            </div>

            <div class="form-control w-75">
                <label asp-for="IdMarca" class="label font-bold text-black">Marca</label>
                <select asp-for="IdMarca" asp-items="ViewBag.ListMarcas" class="select select-bordered w-full" style="border-color:black">
                    <option value="">Seleccione una marca</option>
                </select>
                <span asp-validation-for="IdMarca" class="text-sm italic" style="color:red; font-size: small"> </span>
            </div>

            <input type="hidden" name="Estado" value="true" />

            <div class="form-control mt-6">
                <input type="submit" value="Actualizar Producto" class="btn btn-primary w-full" />
            </div>
        </div>

        <!-- Columna etiquetas -->
        <div class="flex flex-col gap-2">
            <p class="font-bold">Etiquetas del producto</p>
            <p class="mb-1 italic" style="font-size: small">Arrastre las etiquetas al lado derecho para asignarlas al producto.</p>
            <p class="mb-1 italic" style="font-size: small">Arrastre las etiquetas al lado izquierdo para desasignarlas.</p>
            <div id="error-etiquetas" class="mb-1 text-sm italic" style="color:red; font-size: small"></div>
            <div class="w-full bg-gray-200 space-x-10 flex border rounded p-2">
                <div id="dp1" droppable="true" class="w-50 drop rounded-lg my-1 mx-1 border rounded"
                     style="padding-left: 5%; padding-top:1%; padding-right: 5%">
                    <p class="mb-1 font-bold text-center" style="font-size: small">Etiquetas</p>
                    <p class="mb-1 font-bold text-center" style="font-size: small">disponibles</p>                    @{
                        var etiquetas = ViewBag.ListaEtiquetas as List<DoreanSportic.Application.DTOs.EtiquetaDTO>;
                        var asignadas = Model.IdEtiqueta?.Select(e => e.Id).ToList() ?? new List<int>();
                        int index = 1;
                    }
                    @foreach (var etiqueta in etiquetas.Where(e => !asignadas.Contains(e.Id)))
                    {
                        <div id="dg@(index++)" draggable="true" class="drag w-48 p-1 mb-2 rounded font-bold text-center text-white bg-primary" data-id="@etiqueta.Id">
                            @etiqueta.Nombre
                        </div>
                    }
                </div>
                <div id="dp2" droppable="true" class="w-50 drop rounded-lg my-1 mx-1 border rounded"
                     style="padding-left: 5%; padding-top:1%; padding-right: 5%">
                    <p class="mb-1 font-bold text-center" style="font-size: small">Etiquetas</p>
                    <p class="mb-1 font-bold text-center" style="font-size: small">asignadas</p>
                    @foreach (var etiqueta in etiquetas.Where(e => asignadas.Contains(e.Id)))
                    {
                        <div id="dg@(index++)" draggable="true" class="drag w-48 p-1 mb-2 rounded font-bold text-center text-white bg-primary" data-id="@etiqueta.Id">
                            @etiqueta.Nombre
                        </div>
                    }
                </div>
            </div>

            <div>
                <!-- Cargar el contenedor de promedio de reseñas -->
                <div id="contenedor-resennas" class="w-full flex flex-row gap gap-1">
                    <p class="text-sm">Cargando reseñas...</p>
                </div>
            </div>


            <!-- Enviar el estado del producto  (Activo o Inactivo-->
            <div class="form-control w-fit">
                <label class="label">
                    <span class="label-text font-bold text-black mb-1">Estado</span>
                </label>

                <div class="flex items-center gap-2">
                    <span>Inactivo</span>

                    <input type="hidden" name="_Estado" value="false" />

                    <input type="checkbox"
                           name="Estado"
                           class="toggle border-black bg-white checked:border-primary checked:bg-primary checked:text-white"
                           value="true" @(Model.Estado ? "checked" : "") />
                    <span>Activo</span>
                </div>
            </div>




        </div>

        <!-- Columna imágenes -->
        <div class="bg-white rounded w-9/12 mx-4">
            <p class="font-bold mb-1">Imágenes del producto</p>
            <!-- Mostrar error si no se sube ninguna imagen -->
            <div id="zona-errores-validacion" class="text-sm italic" style="color:red; font-size: small"></div>

            <!-- Dropzone de imágenes -->
            <div class="relative flex flex-col p-4 border border-gray-100 rounded">
                <div x-ref="dnd" class="relative w-full min-h-[200px] flex items-center justify-center border rounded-lg bg-base-100 p-4 transition hover:border-blue-500">
                    <input accept="image/*" type="file" multiple class="drop-zone absolute inset-0 z-50 w-full h-full opacity-0"
                           x-on:change="addFiles($event)"
                           x-on:dragover.prevent="$refs.dnd.classList.add('drag-over')"
                           x-on:dragleave="$refs.dnd.classList.remove('drag-over')"
                           x-on:drop.prevent="addFiles($event); $refs.dnd.classList.remove('drag-over')"/>

                    <div class="flex flex-col items-center justify-center text-center">
                        <p>Arrastre las imágenes aquí o haga clic para seleccionarlas.</p>
                    </div>
                </div>

                <template x-if="files.length > 0">
                    <div class="flex flex-wrap gap-2 mt-4" x-on:drop.prevent="drop($event)" x-on:dragover.prevent="$event.dataTransfer.dropEffect = 'move'">
                        <template x-for="(_, index) in Array.from({ length: files.length })">
                            <div class="w-25 h-25 relative flex items-center overflow-hidden text-center bg-gray-100 border rounded cursor-move select-none"
                                 x-on:dragstart="dragstart($event)" x-on:dragend="fileDragging = null"
                                 :class="{'border-blue-600': fileDragging == index}" draggable="true" :data-index="index">

                                <button class="btn-borrar absolute top-0 right-0 z-50 p-1 bg-white rounded-bl hover:bg-gray-200" type="button" x-on:click="remove(index)">
                                    <svg class="w-5 h-5 text-gray-700" xmlns="http://www.w3.org/2000/svg" fill="none"
                                         viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                    </svg>
                                </button>

                                <template x-if="files[index].type.includes('image/')">
                                    <img x-bind:src="loadFile(files[index])" class="p-4 w-25 h-25 absolute top-0 left-0 object-cover z-0 rounded" alt="Preview" />
                                </template>
                            </div>
                        </template>
                    </div>
                </template>
            </div>
        </div>
    </div>
</form>