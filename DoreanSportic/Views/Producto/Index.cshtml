@using Microsoft.AspNetCore.Mvc.Localization
@using DoreanSportic.Application.DTOs
@inject IViewLocalizer Localizer

@model IEnumerable<DoreanSportic.Application.DTOs.ProductoDTO>

@{
    ViewData["Title"] = "Index";
}


<!--Tabs para seleccionar entre "Ropa" y "Accesorios"-->

<div class="tabs tabs-boxed bg-white w-auto shadow-lg mb-1 w-screen font-bold items-center justify-center" id="tabs-categorias">
    <a class="tab tab-active" data-id="1">
        <!-- Ícono camiseta -->
        <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24" class="w-5 h-5">
            <path d="M16 3c-.31 0-.61.06-.89.17L12 5.1 8.89 3.17A2.003 2.003 0 0 0 6 5v2.1l-2.56.85A1 1 0 0 0 3 8.9V21a1 1 0 0 0 1 1h5V13h6v9h5a1 1 0 0 0 1-1V8.9a1 1 0 0 0-.44-.83L18 7.1V5c0-1.1-.9-2-2-2z" />
        </svg>

        @(Localizer["Ropa"])

    </a>
    <a class="tab" data-id="2">
        <!-- Ícono balón de fútbol (accesorio común) -->
        <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24" class="w-5 h-5">
            <path d="M12 2a10 10 0 1 0 10 10A10.011 10.011 0 0 0 12 2zm7.93 6.62-2.83.47-.83-2.2 1.51-1.94a8.028 8.028 0 0 1 2.15 3.67zM15.89 4.6l-1.34 1.72h-4.1L9.11 4.6a8.03 8.03 0 0 1 6.78 0zM5.22 4.95l1.51 1.94-.83 2.2-2.83-.47a8.03 8.03 0 0 1 2.15-3.67zM4.07 15.38l2.83-.47.83 2.2-1.51 1.94a8.028 8.028 0 0 1-2.15-3.67zM8.11 19.4l1.34-1.72h4.1l1.34 1.72a8.03 8.03 0 0 1-6.78 0zm10.67-1.49-1.51-1.94.83-2.2 2.83.47a8.03 8.03 0 0 1-2.15 3.67zM12 14.75 9.59 13.5v-3l2.41-1.25L14.41 10.5v3z" />
        </svg>
        @(Localizer["Accesorios"])

    </a>
</div>

@* Filtro de etiquetas *@
<div id="filtro-etiquetas" class="flex flex-wrap gap-2 w-auto items-center justify-center">
    @* Renderizar las etiquetas *@
    @foreach (var et in ViewBag.Etiquetas as IEnumerable<EtiquetaDTO> ?? Enumerable.Empty<EtiquetaDTO>())
    {
        <label class="cursor-pointer text-white bg-primary flex items-center gap-2 text-sm border rounded px-2 py-1">
            <input type="checkbox" class="chk-etiqueta" value="@et.Nombre" />
            <span>@et.Nombre</span>
        </label>
    }
</div>

<br />


<!-- Contenedor del spinner de carga -->

<div id="loader" class="hidden flex flex-col items-center gap-1 my-4">
    <p class="text-gray-600 font-bold mb-2">@(Localizer["Cargando"])</p>
    <span class="loading loading-ring loading-xl"></span>
</div>

<!--Cargar los productos (cards) dependiendo de la categoría del producto-->
<div id="card-productos-body" class="flex min-h-screen flex-wrap gap-4 justify-center w-screen">
    @await Html.PartialAsync("_CardsProducto", Model)
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const tabs = document.querySelectorAll('#tabs-categorias .tab');
            const loader = document.getElementById('loader');
            const container = document.getElementById('card-productos-body');
             const chkEtiquetas = () =>
                Array.from(document.querySelectorAll('.chk-etiqueta:checked'))
                     .map(x => x.value); 
            let categoriaActiva = 1; // por defecto "Ropa"

            if (!tabs.length || !loader || !container) return;

            // --- Búsqueda global desde el header (sección #3) ---
            window.addEventListener('buscar-productos', (ev) => {
                // ev.detail.q => texto buscado
                cargar({ idCategoria: categoriaActiva, q: ev.detail?.q || '', tagsNombres: chkEtiquetas() });
            });

            // Tabs categoría
            tabs.forEach(tab => {
                tab.addEventListener('click', () => {
                    tabs.forEach(t => t.classList.remove('tab-active'));
                    tab.classList.add('tab-active');
                    categoriaActiva = parseInt(tab.dataset.id, 10);
                    cargar({ idCategoria: categoriaActiva, tagsNombres: chkEtiquetas() });
                });
            });

            // Filtro de etiquetas (escucha cambios)
            document.getElementById('filtro-etiquetas')?.addEventListener('change', () => {
                cargar({ idCategoria: categoriaActiva, tagsNombres: chkEtiquetas() });
            });

            // Utilidad para armar querystring con arrays (?tags=1&tags=2)
            function buildQuery(params) {
                const qs = new URLSearchParams();
                if (params.idCategoria != null) qs.set('idCategoria', params.idCategoria);
                if (params.q) qs.set('q', params.q);
                (params.tagsNombres || []).forEach(t => qs.append('tagsNombres', t));
                return qs.toString();
            }

            function cargar(params) {
                loader.classList.remove('hidden');
                container.innerHTML = "";
                const url = '/Producto/Buscar?' + buildQuery(params);

                fetch(url)
                    .then(res => res.text())
                    .then(html => {
                        setTimeout(() => {
                            container.innerHTML = html;
                            loader.classList.add('hidden');
                        }, 200);
                    })
                    .catch(err => {
                        console.error('Error al cargar productos:', err);
                        container.innerHTML = "<p class='text-red-500'>ERROR</p>";
                        loader.classList.add('hidden');
                    });
            }

            // Cargar ropa (1) al inicio
            cargar({ idCategoria: 1 });

            // Cargar etiquetas por AJAX

            // fetch('/Etiqueta/All').then(r=>r.json()).then(list => {
            //     const cont = document.getElementById('filtro-etiquetas');
            //     cont.innerHTML = list.map(e => `
            //        <label class="cursor-pointer flex items-center gap-2 text-sm border rounded px-2 py-1">
            //            <input type="checkbox" class="chk-etiqueta" value="${e.id}" />
            //            <span>${e.nombre}</span>
            //        </label>`).join('');
            // });
        });
    </script>
}


